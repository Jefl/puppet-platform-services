#!/bin/env ruby
# Databate installation and update script vor Icinga
# on swisstxt platform services

# some settings
ICINGA_BIN     = '/usr/bin/icinga' 
MYSQL_BIN      = '/usr/bin/mysql'

ICINGA_DB_NAME = 'icinga'


# detect icinga version
def icinga_version
  version = 'absent'

  if File.exists? ICINGA_BIN
    version = %x[#{ICINGA_BIN} --version][/^Icinga (.*)$/, 1].strip
  end

  return version
end


# detect icinga db version
def icinga_db_version
  mysql_databases = %x[echo 'show databases;' | #{MYSQL_BIN}]
  version = 'absent'
  
  if mysql_databases.include? ICINGA_DB_NAME
    version = 'unknown'
    icinga_tables = %x[echo 'show tables;' | #{MYSQL_BIN} #{ICINGA_DB_NAME}].strip
    if icinga_tables.include? 'icinga_dbversion'
      version = %x[echo "select version from icinga_dbversion;" | #{MYSQL_BIN} #{ICINGA_DB_NAME}].split.last.strip
    end
    if icinga_tables.empty?
      version = 'empty'
    end
  end
  return version
end


# strip patch version if the string is a version number
def strip_patch_version(version)
  result = version.match(/^(\d+\.\d+)\..*$/)
  return version[/^(\d+\.\d+)\..*$/, 1] if result
  return version
end


# install initial db schema
def icinga_db_initialize
  puts "Initializing icinga database with new schema"
  schema_file = '/usr/share/doc/icinga-idoutils-libdbi-mysql-' + icinga_version + '/db/mysql/mysql.sql'
  result = %x[#{MYSQL_BIN} #{ICINGA_DB_NAME} < #{schema_file} && echo 'SUCCESS']
  if result.split.last.strip == 'SUCCESS'
    puts "Successfuly initialized icinga Database"

    exit 0
  end
  puts "Something went wrong during Database initialization:"
  puts
  puts result
  puts
  debug_message

  exit -1
end


# check for update and take further action
# TODO:
# - implementation
def icinga_db_check_for_update
  puts "Your icinga DB probably needs an update." 
  puts "This is not implemeted at the Moment, please"
  puts "update your database manualy."
  puts
  debug_message
  
  exit -1
end


# print status if message is unknown
def unknown_status
  puts "UNKNOWN STATUS"
  puts "The migration script was not sure what to do."
  puts
  debug_message

  exit -1
end


# print debug messages to find out whats going on
def debug_message
  puts "Values for Debuging:"
  puts
  puts "MySQL Databases:"
  puts %x[echo 'show databases;' | #{MYSQL_BIN}]
  puts 
  puts "Icinga Version: " + icinga_version + "(" + strip_patch_version(icinga_version) + ")"
  puts "Icinga DB Version: " + icinga_db_version + "(" + strip_patch_version(icinga_db_version) + ")"
  puts 
  puts "Installed Icinga packages:"
  puts %x[/bin/rpm -qa | grep icinga]
  puts
end


# here starts the script
case strip_patch_version(icinga_db_version)
  when strip_patch_version(icinga_version) then puts "package and database version match. nothing to do"
  when 'empty' then icinga_db_initialize
  when 'unknown' then unknown_status
  else icinga_db_check_for_update
end
